import ConfigItem from "./ConfigItem.js";
import ConfigContainer from "./ConfigContainer.js";
import ConfigCheckboxAdapter from "../Element/Input/ConfigCheckboxAdapter.js";
import ConfigInputAdapter from "../Element/Input/ConfigInputAdapter.js";
import HTMLElementFactory from "../Element/HTMLElementFactory.js";
export default class ConfigFactory {
    static createDefaultConfigContainer() {
        return new ConfigContainer([
            ConfigFactory.createLineWidthConfig(),
            ConfigFactory.createColorConfig(),
            ConfigFactory.createOpacityConfig(),
            ConfigFactory.createContourConfig(),
            ConfigFactory.createRoundCapConfig(),
            ConfigFactory.createTouchesPerTickConfig(),
            ConfigFactory.createBrushAreaDiameterConfig(),
            ConfigFactory.createBrushAreaWidthConfig(),
            ConfigFactory.createBrushAreaHeightConfig(),
            ConfigFactory.createElementDiameterConfig(),
            ConfigFactory.createElementWidthConfig(),
            ConfigFactory.createElementHeightConfig(),
            ConfigFactory.createBrushAreaRotationConfig(),
            ConfigFactory.createElementRotationConfig(),
            ConfigFactory.createElementEdgesCountConfig(),
            ConfigFactory.createElementRandomRedColorSpreadConfig(),
            ConfigFactory.createElementRandomGreenColorSpreadConfig(),
            ConfigFactory.createElementRandomBlueColorSpreadConfig(),
            ConfigFactory.createElementRandomDiameterSpreadConfig(),
            ConfigFactory.createElementDistanceFromClickConfig(),
            ConfigFactory.createElementLapsPerSecondConfig(),
            ConfigFactory.createGumElasticityConfig(),
            ConfigFactory.createStripedLineConfig(),
            ConfigFactory.createStripeLineLengthConfig(),
            ConfigFactory.createStripeGapLengthConfig(),
            ConfigFactory.createLineWidthFunctionConfig(),
            ConfigFactory.createColorFunctionEnabledConfig(),
            ConfigFactory.createRedValueFunctionConfig(),
            ConfigFactory.createGreenValueFunctionConfig(),
            ConfigFactory.createBlueValueFunctionConfig(),
            ConfigFactory.createOpacityFunctionConfig(),
            ConfigFactory.createElementDiameterFunctionConfig(),
            ConfigFactory.createElementRotationFunctionConfig(),
        ]);
    }
    static createLineWidthConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.LINE_WIDTH_PROPERTY, '5');
        return new ConfigItem(ConfigItem.LINE_WIDTH_PROPERTY, 'Line width', inputAdapter);
    }
    static createColorConfig() {
        let input = HTMLElementFactory.createInput('color');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.COLOR_PROPERTY, '#000');
        return new ConfigItem(ConfigItem.COLOR_PROPERTY, 'Color', inputAdapter);
    }
    static createOpacityConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0, max: 1, step: 0.01 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.OPACITY_PROPERTY, '1');
        return new ConfigItem(ConfigItem.OPACITY_PROPERTY, 'Opacity', inputAdapter);
    }
    static createContourConfig() {
        let input = HTMLElementFactory.createInput('checkbox');
        let inputAdapter = new ConfigCheckboxAdapter(input, ConfigItem.CONTOUR_PROPERTY, 'off');
        return new ConfigItem(ConfigItem.CONTOUR_PROPERTY, 'Contour only', inputAdapter);
    }
    static createRoundCapConfig() {
        let input = HTMLElementFactory.createInput('checkbox');
        let inputAdapter = new ConfigCheckboxAdapter(input, ConfigItem.ROUND_CAP_PROPERTY, 'off');
        return new ConfigItem(ConfigItem.ROUND_CAP_PROPERTY, 'Round cap', inputAdapter);
    }
    static createTouchesPerTickConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.TOUCHES_PER_TICK_PROPERTY, '10');
        return new ConfigItem(ConfigItem.TOUCHES_PER_TICK_PROPERTY, 'Touches per tick', inputAdapter);
    }
    static createBrushAreaDiameterConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.BRUSH_AREA_DIAMETER_PROPERTY, '10');
        return new ConfigItem(ConfigItem.BRUSH_AREA_DIAMETER_PROPERTY, 'Brush area diameter', inputAdapter);
    }
    static createBrushAreaWidthConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.BRUSH_AREA_WIDTH_PROPERTY, '10');
        return new ConfigItem(ConfigItem.BRUSH_AREA_WIDTH_PROPERTY, 'Brush area width', inputAdapter);
    }
    static createBrushAreaHeightConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.BRUSH_AREA_HEIGHT_PROPERTY, '10');
        return new ConfigItem(ConfigItem.BRUSH_AREA_HEIGHT_PROPERTY, 'Brush area height', inputAdapter);
    }
    static createElementDiameterConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_DIAMETER_PROPERTY, '1');
        return new ConfigItem(ConfigItem.ELEMENT_DIAMETER_PROPERTY, 'Element diameter', inputAdapter);
    }
    static createElementWidthConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_WIDTH_PROPERTY, '10');
        return new ConfigItem(ConfigItem.ELEMENT_WIDTH_PROPERTY, 'Element width', inputAdapter);
    }
    static createElementHeightConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_HEIGHT_PROPERTY, '10');
        return new ConfigItem(ConfigItem.ELEMENT_HEIGHT_PROPERTY, 'Element height', inputAdapter);
    }
    static createBrushAreaRotationConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', max: 360 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.BRUSH_AREA_ROTATION_PROPERTY, '10');
        return new ConfigItem(ConfigItem.BRUSH_AREA_ROTATION_PROPERTY, 'Brush area rotation (degrees)', inputAdapter);
    }
    static createElementRotationConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', max: 360 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_ROTATION_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_ROTATION_PROPERTY, 'Element rotation (degrees)', inputAdapter);
    }
    static createElementEdgesCountConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 3, max: 30 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_EDGES_COUNT_PROPERTY, '3');
        return new ConfigItem(ConfigItem.ELEMENT_EDGES_COUNT_PROPERTY, 'Element edges count', inputAdapter);
    }
    static createElementRandomRedColorSpreadConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', max: 255 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_RANDOM_RED_COLOR_SPREAD_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_RANDOM_RED_COLOR_SPREAD_PROPERTY, 'Element random red color spread around current color RGB red value', inputAdapter);
    }
    static createElementRandomGreenColorSpreadConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', max: 255 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_RANDOM_GREEN_COLOR_SPREAD_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_RANDOM_GREEN_COLOR_SPREAD_PROPERTY, 'Element random green color spread around current color RGB red value', inputAdapter);
    }
    static createElementRandomBlueColorSpreadConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', max: 255 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_RANDOM_BLUE_COLOR_SPREAD_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_RANDOM_BLUE_COLOR_SPREAD_PROPERTY, 'Element random blue color spread around current color RGB red value', inputAdapter);
    }
    static createElementRandomDiameterSpreadConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0' });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_RANDOM_DIAMETER_SPREAD_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_RANDOM_DIAMETER_SPREAD_PROPERTY, 'Element random diameter spread around current given value', inputAdapter);
    }
    static createElementDistanceFromClickConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0' });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_DISTANCE_FROM_CLICK_PROPERTY, '10');
        return new ConfigItem(ConfigItem.ELEMENT_DISTANCE_FROM_CLICK_PROPERTY, 'Element distance from click', inputAdapter);
    }
    static createElementLapsPerSecondConfig() {
        let input = HTMLElementFactory.createInput('number', { min: '0', step: 0.01 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_LAPS_PER_SECOND_PROPERTY, '3');
        return new ConfigItem(ConfigItem.ELEMENT_LAPS_PER_SECOND_PROPERTY, 'Element laps per second', inputAdapter);
    }
    static createGumElasticityConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0, max: 1, step: 0.01 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.GUM_ELASTICITY_PROPERTY, '0.5');
        return new ConfigItem(ConfigItem.GUM_ELASTICITY_PROPERTY, 'Gum elasticity', inputAdapter);
    }
    static createStripedLineConfig() {
        let input = HTMLElementFactory.createInput('checkbox');
        let inputAdapter = new ConfigCheckboxAdapter(input, ConfigItem.STRIPED_LINE_PROPERTY, 'off');
        return new ConfigItem(ConfigItem.STRIPED_LINE_PROPERTY, 'Striped line', inputAdapter);
    }
    static createStripeLineLengthConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0, step: 1 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.STRIPE_LINE_LENGTH_PROPERTY, '5');
        return new ConfigItem(ConfigItem.STRIPE_LINE_LENGTH_PROPERTY, 'Stripe line length', inputAdapter);
    }
    static createStripeGapLengthConfig() {
        let input = HTMLElementFactory.createInput('number', { min: 0, step: 1 });
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.STRIPE_GAP_LENGTH_PROPERTY, '5');
        return new ConfigItem(ConfigItem.STRIPE_GAP_LENGTH_PROPERTY, 'Stripe gap length', inputAdapter);
    }
    static createLineWidthFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.LINE_WIDTH_FUNCTION_PROPERTY, '5');
        return new ConfigItem(ConfigItem.LINE_WIDTH_FUNCTION_PROPERTY, 'Line width function (from time)', inputAdapter);
    }
    static createColorFunctionEnabledConfig() {
        let input = HTMLElementFactory.createInput('checkbox');
        let inputAdapter = new ConfigCheckboxAdapter(input, ConfigItem.COLOR_FUNCTION_ENABLED_PROPERTY, 'off');
        return new ConfigItem(ConfigItem.COLOR_FUNCTION_ENABLED_PROPERTY, 'Color function enabled', inputAdapter);
    }
    static createRedValueFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.RED_VALUE_FUNCTION_PROPERTY, '0');
        return new ConfigItem(ConfigItem.RED_VALUE_FUNCTION_PROPERTY, 'RGB red color value function (from time)', inputAdapter);
    }
    static createGreenValueFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.GREEN_VALUE_FUNCTION_PROPERTY, '0');
        return new ConfigItem(ConfigItem.GREEN_VALUE_FUNCTION_PROPERTY, 'RGB green color value function (from time)', inputAdapter);
    }
    static createBlueValueFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.BLUE_VALUE_FUNCTION_PROPERTY, '0');
        return new ConfigItem(ConfigItem.BLUE_VALUE_FUNCTION_PROPERTY, 'RGB blue color value function (from time)', inputAdapter);
    }
    static createOpacityFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.OPACITY_FUNCTION_PROPERTY, '1');
        return new ConfigItem(ConfigItem.OPACITY_FUNCTION_PROPERTY, 'Opacity value function (from time)', inputAdapter);
    }
    static createElementDiameterFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_DIAMETER_FUNCTION_PROPERTY, '1');
        return new ConfigItem(ConfigItem.ELEMENT_DIAMETER_FUNCTION_PROPERTY, 'Element diameter function (from time)', inputAdapter);
    }
    static createElementRotationFunctionConfig() {
        let input = HTMLElementFactory.createInput('text');
        let inputAdapter = new ConfigInputAdapter(input, ConfigItem.ELEMENT_ROTATION_FUNCTION_PROPERTY, '0');
        return new ConfigItem(ConfigItem.ELEMENT_ROTATION_FUNCTION_PROPERTY, 'Element rotation function (from time, 2 * PI as full circle)', inputAdapter);
    }
}
//# sourceMappingURL=data:application/json;base64,